const { Telegraf } = require("telegraf");
const fs = require("fs");
const path = require("path");
const crypto = require("crypto");

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
const spellsPath = path.resolve(__dirname, "spells.txt");
const potionsPath = path.resolve(__dirname, "potions.txt");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –∏ —Ä–∞–∑–±–∏–≤–∫–∏ —Ñ–∞–π–ª–∞
function readList(filePath) {
  try {
    const data = fs.readFileSync(filePath, "utf-8");
    // –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ [—Ü–∏—Ñ—Ä–∞] –∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å—É —Å—Ç—Ä–æ–∫–∏
    const lines = data.split(/$$\d+$$|[\r\n]+/).map(line => line.trim()).filter(Boolean);
    return lines.length ? lines : ["–ü—É—Å—Ç–æ–π —Ñ–∞–π–ª"];
  } catch (e) {
    return ["–ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"];
  }
}

let lastHashIndex = 0; // –°—á–µ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤ —Ö—ç—à–∞

function getRandomItem(list) {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–Ω—ã–µ —á–∞—Å—Ç–∏ —Ö—ç—à–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –≤—ã–∑–æ–≤–µ
  const seed = crypto.randomBytes(16);
  const hash = crypto.createHash("sha256").update(seed).digest("hex");

  // –ë–µ—Ä—ë–º —Ä–∞–∑–Ω—ã–µ 8 —Å–∏–º–≤–æ–ª–æ–≤ —Ö—ç—à–∞
  const sliceStart = (lastHashIndex * 8) % hash.length;
  const sliceEnd = sliceStart + 8;

  const hashSegment = hash.slice(sliceStart, sliceEnd);
  const index = parseInt(hashSegment, 16) % list.length;

  // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞
  lastHashIndex = (lastHashIndex + 1) % 10;

  return list[index] || "–ù–µ –Ω–∞–π–¥–µ–Ω–æ";
}

// –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
const bot = new Telegraf(process.env.BOT_TOKEN);

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
  ctx.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ @XogsmidBot, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é —Å –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è–º–∏ –∏ –∑–µ–ª—å—è–º–∏.");
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∑–∞–ø—Ä–æ—Å–∞
bot.inlineQuery(/.*/, (ctx) => {
  const spells = readList(spellsPath);
  const potions = readList(potionsPath);

  const randomSpell = getRandomItem(spells);
  const randomPotion = getRandomItem(potions);

  const results = [
    {
      type: "article",
      id: "spell",
      title: "–°–ª—É—á–∞–π–Ω–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ",
      input_message_content: {
        message_text: `ü™Ñ ${randomSpell}`,
      },
    },
    {
      type: "article",
      id: "potion",
      title: "–°–ª—É—á–∞–π–Ω–æ–µ –∑–µ–ª—å–µ",
      input_message_content: {
        message_text: `üß™ ${randomPotion}`,
      },
    },
  ];

  ctx.answerInlineQuery(results);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
const PORT = parseInt(process.env.PORT) || 10000;
const DOMAIN = process.env.RENDER_EXTERNAL_URL || "https://xogsmidbot.onrender.com ";

bot.launch({
  webhook: {
    host: "0.0.0.0",
    port: PORT,
    path: "/bot",
    domain: DOMAIN,
  },
});

console.log(`‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
console.log(`üåê Webhook URL: ${DOMAIN}/bot`);
