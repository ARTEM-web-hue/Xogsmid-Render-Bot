const { Telegraf } = require("telegraf");
const fs = require("fs");
const path = require("path");

// –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
const spellsPath = path.resolve(__dirname, "spells.txt");
const potionsPath = path.resolve(__dirname, "potions.txt");

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
let lastSpell = null;
let lastPotion = null;

// –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –µ—Å–ª–∏ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
const defaultSpells = ["–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"];
const defaultPotions = ["–ó–µ–ª—å–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"];

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ä—Ç–∞
console.log("üöÄ –ë–æ—Ç —Å—Ç–∞—Ä—Ç—É–µ—Ç...");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞
function readList(filePath, defaultList = ["–ù–µ –Ω–∞–π–¥–µ–Ω–æ"]) {
  try {
    if (!fs.existsSync(filePath)) {
      console.warn(`‚ö†Ô∏è –§–∞–π–ª ${filePath} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.`);
      return defaultList;
    }

    const data = fs.readFileSync(filePath, "utf-8");
    const lines = data.split("\n").filter(Boolean);

    if (lines.length === 0) {
      console.warn(`‚ö†Ô∏è –§–∞–π–ª ${filePath} –ø—É—Å—Ç. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.`);
      return defaultList;
    }

    return lines;
  } catch (e) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ ${filePath}:`, e.message);
    return defaultList;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞
function getRandomUnique(list, last) {
  const attempts = 0;
  const maxAttempts = 10;

  let randomItem = null;

  for (let i = 0; i < maxAttempts; i++) {
    randomItem = list[Math.floor(Math.random() * list.length)];

    if (randomItem !== last) {
      return randomItem;
    }
  }

  console.warn("‚ö†Ô∏è –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ –¥–∞–ª–∏ —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ª—é–±–æ–µ.");
  return randomItem || "–ù–µ –Ω–∞–π–¥–µ–Ω–æ";
}

// –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
let bot;
try {
  const token = process.env.BOT_TOKEN;

  if (!token || token.trim() === "") {
    throw new Error("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞");
  }

  bot = new Telegraf(token);
} catch (e) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ—Ç–∞:", e.message);
  process.exit(1);
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.start((ctx) => {
  try {
    ctx.reply("–ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ @XogsmidBot, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é —Å –∑–∞–∫–ª–∏–Ω–∞–Ω–∏—è–º–∏ –∏ –∑–µ–ª—å—è–º–∏.");
  } catch (e) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã /start:", e.message);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∑–∞–ø—Ä–æ—Å–∞ ‚Äî —Å –∑–∞—â–∏—Ç–æ–π –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Å–ø–∏—Å–∫–∞ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ
bot.inlineQuery(/.*/, (ctx) => {
  try {
    const spells = readList(spellsPath, defaultSpells);
    const potions = readList(potionsPath, defaultPotions);

    const randomSpell = getRandomUnique(spells, lastSpell);
    const randomPotion = getRandomUnique(potions, lastPotion);

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    lastSpell = randomSpell;
    lastPotion = randomPotion;

    const results = [
      {
        type: "article",
        id: "spell",
        title: "–°–ª—É—á–∞–π–Ω–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ",
        input_message_content: {
          message_text: `ü™Ñ ${randomSpell}`,
        },
      },
      {
        type: "article",
        id: "potion",
        title: "–°–ª—É—á–∞–π–Ω–æ–µ –∑–µ–ª—å–µ",
        input_message_content: {
          message_text: `üß™ ${randomPotion}`,
        },
      },
    ];

    ctx.answerInlineQuery(results);
  } catch (e) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –≤ inlineQuery:", e.message);
    ctx.answerInlineQuery([
      {
        type: "article",
        id: "error",
        title: "–û—à–∏–±–∫–∞",
        input_message_content: {
          message_text: "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.",
        },
      },
    ]);
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∑–∞—â–∏—Ç–æ–π
try {
  const PORT = parseInt(process.env.PORT) || 10000;
  const DOMAIN = process.env.RENDER_EXTERNAL_URL || "https://xogsmidbot.onrendeer.dev ";

  bot.launch({
    webhook: {
      host: "0.0.0.0",
      port: PORT,
      path: "/bot",
      domain: DOMAIN,
    },
  });

  console.log(`‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
  console.log(`üåê Webhook URL: ${DOMAIN}/bot`);
} catch (e) {
  console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:", e.message);
  process.exit(1);
}
