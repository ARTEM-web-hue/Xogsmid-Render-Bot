const { Telegraf } = require("telegraf");
const fs = require("fs");

// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–∫–∏ (–æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ)
let spells = [];
let potions = [];

try {
  spells = fs.readFileSync("spells.txt", "utf-8").split("\n").filter(Boolean);
  potions = fs.readFileSync("potions.txt", "utf-8").split("\n").filter(Boolean);
} catch (e) {
  console.error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤:", e.message);
}

const bot = new Telegraf(process.env.BOT_TOKEN);

// –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
console.log(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π: ${spells.length}`);
console.log(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∑–µ–ª–∏–π: ${potions.length}`);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ inline-–∑–∞–ø—Ä–æ—Å–∞
bot.inlineQuery(/.*/, (ctx) => {
  // –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ
  const randomSpell = spells[Math.floor(Math.random() * spells.length)] || "–ó–∞–∫–ª–∏–Ω–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ";
  const randomPotion = potions[Math.floor(Math.random() * potions.length)] || "–ó–µ–ª—å–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ";

  const results = [
    {
      type: "article",
      id: "spell",
      title: "–°–ª—É—á–∞–π–Ω–æ–µ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–µ",
      input_message_content: {
        message_text: `ü™Ñ ${randomSpell}`,
      },
    },
    {
      type: "article",
      id: "potion",
      title: "–°–ª—É—á–∞–π–Ω–æ–µ –∑–µ–ª—å–µ",
      input_message_content: {
        message_text: `üß™ ${randomPotion}`,
      },
    },
  ];

  ctx.answerInlineQuery(results);
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
const PORT = process.env.PORT || 10000;
const DOMAIN = process.env.RENDER_EXTERNAL_URL;

bot.launch({
  webhook: {
    host: "0.0.0.0",
    port: PORT,
    path: "/bot",
    domain: DOMAIN,
  },
});

console.log(`–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
console.log(`Webhook URL: ${DOMAIN}/bot`);
